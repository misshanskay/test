package cn.sirbox.controller;

import java.io.IOException;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.sf.json.JSONArray;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import com.github.pagehelper.PageInfo;

import cn.sirbox.model.City;
import cn.sirbox.model.Province;
import cn.sirbox.model.Releaseinfo;
import cn.sirbox.model.UserU;
import cn.sirbox.model.page;
import cn.sirbox.service.ReleaseinfoService;

@Controller
@RequestMapping("/releaseinfo")
public class ReleaseinfoController {

	@Autowired
	private ReleaseinfoService releaseinfoService;

	// 查询所有发布信息
	@RequestMapping("/findAll")
	public String editAllReleaseinfo(Model model,@RequestParam(required=false,value="thispage",defaultValue="1")String thispage) throws Exception {

		List<Releaseinfo> riList = releaseinfoService.findAll(thispage);
		PageInfo<Releaseinfo> pageInfo = new PageInfo<Releaseinfo>(riList);
		Long count = pageInfo.getTotal();
		page page = new page(Integer.parseInt(thispage),Integer.valueOf(count.toString()));
		model.addAttribute("page",page);
		model.addAttribute("riList", riList);
		return "releaseinfo/releaseinfolist";
	}

	// 跳转添加页面
	@RequestMapping("/toAdd")
	public String toAddReleaseinfo(Model model) {
		// 开启modeldriven
		model.addAttribute(new Releaseinfo());
		List<Province> plist = releaseinfoService.getProvince();
		model.addAttribute("plist",plist);
		return "releaseinfo/addreleaseinfo";
	}

	// 添加信息
	@RequestMapping("/add")
	public String addReleaseinfo(Releaseinfo releaseinfo) throws Exception {
		
		/*UserU userU = (UserU) request.getSession().getAttribute("userU");
		releaseinfo.setIssuer(userU.getUname());*/
		releaseinfoService.add(releaseinfo);
		return "redirect:findAll.do";
	}

	
	// 跳转更新页面
	@RequestMapping("/toUpdate")
	public String updateReleaseinfo(Integer id, Model model) throws Exception {

		Releaseinfo releaseinfo = releaseinfoService.findById(id);
		List<Province> plist = releaseinfoService.getProvince();
		model.addAttribute("plist",plist);
		model.addAttribute(releaseinfo);
		return "releaseinfo/updatereleaseinfo";
	}

	// 更新信息
	@RequestMapping("/update")
	public String updateReleaseinfo(Releaseinfo releaseinfo) throws Exception {

		releaseinfoService.update(releaseinfo);
		return "redirect:findAll.do";
	}
	
	// 删除信息
	@RequestMapping("/delete")
	public String deleteReleaseinfo(Integer id) throws Exception {

		releaseinfoService.delete(id);
		return "redirect:findAll.do";
	}

	// 查看单个发布信息
	@RequestMapping("/check")
	public String findById(Integer id, Model model) throws Exception {

		Releaseinfo releaseinfo = releaseinfoService.findById(id);
		model.addAttribute(releaseinfo);
		return "releaseinfo/checkreleaseinfo";
	}

	// 批量审批通过
	@RequestMapping("/edits")
	public String updateReleaseinfos(Integer[] id,String str) throws Exception {

		releaseinfoService.update(id,str);
		return "redirect:findAll.do";
	}

	//跳转审批页面
	@RequestMapping("/shenhe")
	public String toUpdate(Integer id, Model model) throws Exception {

		Releaseinfo releaseinfo = releaseinfoService.findById(id);
		model.addAttribute(releaseinfo);
		return "releaseinfo/shenpireleaseinfo";

	}
/*
	// 根据审核状态查询发布信息
	@RequestMapping("/edit")
	public String editReleaseinfo(Integer state,Model model) throws Exception {
		
		List<Releaseinfo> riList = releaseinfoService.findByState(state);
		model.addAttribute("riList", riList);
		return "releaseinfo/releaseinfolist";
	}
	
	//根据行业查询发布信息
	@RequestMapping("/findByIB")
	public String editReleaseinfo(String itemBusiness , Model model) throws Exception{
		
		List<Releaseinfo> riList = releaseinfoService.findByName(itemBusiness);
		model.addAttribute("riList", riList);
		return "releaseinfo/releaseinfolist";
		
	}*/
	
    @RequestMapping("/export")
    public String exportFile(HttpServletResponse response) throws Exception {
    	
    	releaseinfoService.exportFile(response);

    	return "redirect:editAll.do";
    }
	
	@RequestMapping("/pay")
	public void pay(HttpServletRequest request, HttpServletResponse response){
		
		try {
			response.getWriter().write(1);
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	@RequestMapping("/querycity")
	public void queryCity(String provincecode,HttpServletResponse response) throws IOException{
		
		List<City> clist = releaseinfoService.getCity(provincecode);
		response.getWriter().print(JSONArray.fromObject(clist).toString());
	}
}
