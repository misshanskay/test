package cn.sirbox.controller;

import java.io.BufferedOutputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import cn.sirbox.model.Enterprise;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

import cn.sirbox.model.UserU;
import cn.sirbox.model.page;
import cn.sirbox.service.impl.EnterpriseService;
import cn.sirbox.utils.config;
import net.sf.json.JSONArray;

@Controller
@RequestMapping("/enterprise")
public class EnterpriseController {
	@Autowired
	private EnterpriseService enterpriseService;
	
	@RequestMapping("/list")
	public String list(Model model){
		
            int thispage=0;
            List<Enterprise> list = enterpriseService.selectAllEnterprise(thispage);
        
        model.addAttribute("thispage", thispage);
		model.addAttribute("list", list);
		return "enterpriselist";
	}
	@RequestMapping("/addenterprise")
	public String addenterprise(Model model){
		Map<String,List<String>> map=getProvince();
		Map<String,List<String>> map1=getType();
		model.addAttribute("map",map);
		model.addAttribute("map1",map1);
            
		return "addenterprise";
	}
	
	@RequestMapping("/addenter")
	public String addenter(Enterprise enterprise,HttpServletRequest request,Model model,@RequestParam(value = "business") MultipartFile file,@RequestParam(value = "tex") MultipartFile file1){
	 
		String str=request.getRealPath("/");
   	 String fileName = new Date().getTime()+".png";
   	 
   	 String m=str+"images\\enterprise\\"+fileName;
   	 String m1=str+"images\\enterprise\\tex\\"+fileName;
   	 if(file!=null){
   		try {
   	   	 byte[] bytes = file.getBytes();
   	        BufferedOutputStream stream = new BufferedOutputStream(
   	                new FileOutputStream(new File(m)));
   			stream.write(bytes);
   			  stream.close();
   			enterprise.setEbusiness(fileName);
   		} catch (IOException e) {
   			// TODO Auto-generated catch block
   			e.printStackTrace();
   		}
   	 }
   	if(file1!=null){
   		try {
   	   	 byte[] bytes1 = file1.getBytes();
   	        BufferedOutputStream stream1 = new BufferedOutputStream(
   	        		new FileOutputStream(new File(m1)));
   			stream1.write(bytes1);
   			  stream1.close();
   			enterprise.setEtex(fileName);
   		} catch (IOException e) {
   			// TODO Auto-generated catch block
   			e.printStackTrace();
   		}
   	}
   	
   	
   	enterprise.setEstatus(1);
   	enterpriseService.insertSelective(enterprise);
		int thispage=0;
		Integer count=enterpriseService.countByExample();
        Integer page1=count%(page.pagenumber)==0?count/(page.pagenumber):count/(page.pagenumber)+1;
        List<Enterprise> list = enterpriseService.selectAllEnterprise(thispage);
        System.out.println(page1);
    model.addAttribute("page1", page1);
    model.addAttribute("thispage", thispage);
	model.addAttribute("list", list);
		return "enterpriselist";
	}
	
	@RequestMapping("/upenterprise")
	public String upenterprise(Integer eid,Model model){
		Map<String,List<String>> map=getProvince();
		Map<String,List<String>> map1=getType();
		model.addAttribute("map",map);
		model.addAttribute("map1",map1);
		Enterprise enterprise=enterpriseService.selectByPrimaryKey(eid);
        model.addAttribute("enterprise", enterprise);
		return "upenterprise";
	}
	
	@RequestMapping("/upenterprise1")
	public String upenterprise1(Enterprise enterprise,HttpServletRequest request,Model model,@RequestParam(value = "business") MultipartFile file,@RequestParam(value = "tex") MultipartFile file1){
		String str=request.getRealPath("/");
	   	 String fileName = new Date().getTime()+".png";
	   	 
	   	 String m=str+"images\\enterprise\\"+fileName;
	   	 String m1=str+"images\\enterprise\\tex\\"+fileName;
	   	 if(!file.isEmpty()){
	   		try {
	   	   	 byte[] bytes = file.getBytes();
	   	        BufferedOutputStream stream = new BufferedOutputStream(
	   	                new FileOutputStream(new File(m)));
	   			stream.write(bytes);
	   			  stream.close();
	   			enterprise.setEbusiness(fileName);
	   		} catch (IOException e) {
	   			// TODO Auto-generated catch block
	   			e.printStackTrace();
	   		}
	   	 }
	   	if(!file1.isEmpty()){
	   		try {
	   	   	 byte[] bytes1 = file1.getBytes();
	   	        BufferedOutputStream stream1 = new BufferedOutputStream(
	   	        		new FileOutputStream(new File(m1)));
	   			stream1.write(bytes1);
	   			  stream1.close();
	   			enterprise.setEtex(fileName);
	   		} catch (IOException e) {
	   			// TODO Auto-generated catch block
	   			e.printStackTrace();
	   		}
	   	}
	   	enterpriseService.updateByPrimaryKeySelective(enterprise);
	   	int thispage=0;
        List<Enterprise> list = enterpriseService.selectAllEnterprise(thispage);
    model.addAttribute("thispage", thispage);
	model.addAttribute("list", list);
		return "enterpriselist";
	}
	
	public Map<String,List<String>> getProvince(){
		List<String> list=new ArrayList<String>();
		list.add("北京市");list.add("上海市");list.add("重庆市");list.add("天津市");list.add("宁夏");list.add("内蒙古");
		list.add("安徽省");list.add("福建省");list.add("甘肃省");list.add("广东省");list.add("广西省");list.add("贵州省");
		list.add("海南省");list.add("河北省");list.add("河南省");list.add("黑龙江");list.add("湖北省");list.add("湖南省");
		list.add("吉林省");list.add("江苏省");list.add("江西省");list.add("辽宁省");list.add("青海省");list.add("山东省");
		list.add("山西省");list.add("陕西省");list.add("四川省");list.add("四川省");list.add("云南省");list.add("浙江省");
		list.add("西藏");list.add("新疆");list.add("港澳台");
		Map<String,List<String>> map=new HashMap<>();
		map.put("province", list);
		return map;
	}
	
	public Map<String,List<String>> getType(){
		List<String> list=new ArrayList<String>();
		list.add("休闲娱乐");list.add("其他行业");list.add("产业园区");list.add("园林园艺");list.add("PPP项目");list.add("工艺收藏");
		list.add("加工制造");list.add("基础设施");list.add("装备制造");list.add("仓储物流");list.add("现代服务");list.add("供水供气");
		list.add("公路桥梁");list.add("印刷包装");list.add("电子器件");list.add("生物制药");list.add("船舶制造");list.add("钢铁行业");
		list.add("家具装饰");list.add("机械机电");list.add("电器家电");list.add("通信传媒");list.add("能源电力");list.add("水泥行业");
		list.add("物资外贸");list.add("纺织服装");list.add("商业百货");list.add("农药化肥");list.add("医疗器械");list.add("食品行业");
		list.add("轻工化纤");list.add("交通运输");list.add("汽车汽配");list.add("农林牧渔");list.add("建筑建材");list.add("石油化工");
		list.add("环保绿化");list.add("文化教育");list.add("IT互联网");list.add("矿产冶金");list.add("旅游酒店");list.add("房地产业");
		list.add("高新科技");list.add("金融投资");
		Map<String,List<String>> map=new HashMap<>();
		map.put("type", list);
		return map;
	}
}
