package cn.sirbox.service.impl;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import org.mybatis.generator.codegen.mybatis3.javamapper.elements.sqlprovider.ProviderCountByExampleMethodGenerator;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import cn.sirbox.dao.PartMapper;
import cn.sirbox.dao.UserDeptMapper;
import cn.sirbox.dao.UserExtendMapper;
import cn.sirbox.dao.UserPartMapper;
import cn.sirbox.dao.UserUMapper;
import cn.sirbox.model.PartExample;
import cn.sirbox.model.UserDeptExample;
import cn.sirbox.model.UserDeptKey;
import cn.sirbox.model.UserExtend;
import cn.sirbox.model.UserExtendExample;
import cn.sirbox.model.UserPartExample;
import cn.sirbox.model.UserPartKey;
import cn.sirbox.model.UserU;
import cn.sirbox.model.UserUExample;

/**
 * Created by X201 on 2016/8/26 0026.
 */
@Service
public class UserUService {

    @Autowired
    private UserUMapper userUMapper;
    
    @Autowired
    private UserDeptMapper userDeptMapper;

    @Autowired
    private UserExtendMapper userExtendMapper;
    
    @Autowired
    private UserPartMapper userPartMapper;
    
    @Autowired
    private PartMapper partMapper;
    
   public UserU getUserUById(Integer uid){

       UserUExample e = new UserUExample();
       e.createCriteria().andUidEqualTo(uid).andEnabledEqualTo(1);
        return userUMapper.selectByExample(e).get(0);
    }

    public UserU getUserUByName(String uname) {
        UserUExample e = new UserUExample();
        e.createCriteria().andUnameEqualTo(uname).andEnabledEqualTo(1);
        List<UserU> user=userUMapper.selectByExample(e);
        if(user!=null){
            return user.get(0);
        }
        return null;
    }
    public UserU insertSelective(UserU userU){
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
        userU.setEnabled(1);
        userU.setStatus("government");
        userU.setCreatetime(new Date());
        userU.setUpdatetime(new Date());
        userUMapper.insertSelective(userU);
        UserU userU1=getUserUByName(userU.getUname());
        userU.setUid(userU1.getUid());
        userU.getUserExtend().setUid(userU1.getUid());
        userExtendMapper.insertSelective(userU.getUserExtend());
        userU.getUserDeptKey().setUid(userU1.getUid());
        userDeptMapper.insertSelective(userU.getUserDeptKey());
       
        return userU1;
       
    }
    /* public UserU getUserU(UserU userU) {
      //  return userUMapper.getUserU(userU);
        return null;
    }

    

   

   
	public List<String> getUserUPower(String uname) {
		// TODO Auto-generated method stub
		//return userUMapper.getUserUPower(uname);
	    return null;
	}

	public void deleteUserUPower(String uname) {
		// TODO Auto-generated method stub
		//userUMapper.deleteUserUPower(uname);
	}

	public List<UserU> getAllUserUDept() {
		// TODO Auto-generated method stub
		//return userUMapper.getAllUserUDept();
	    return null;
	}

	public void updateDeptById(int uid, Integer did) {
		// TODO Auto-generated method stub
		//userUMapper.updateDeptById(uid,did);
	}

    public Integer countByUserU() {
        // TODO Auto-generated method stub
        //return userUMapper.countByUserU();
        return null;
    }

    public String getUserUPart(Integer uid) {
        // TODO Auto-generated method stub
        //return userUMapper.getUserUPart(uid);
        return null;
    }

   
    
    
    public void test(){
        UserUExample e = new UserUExample();
        e.createCriteria().andUidEqualTo(1);
        userUMapper.selectByExample(e);
        
        
    }*/
    public List<UserU> selectAllUserU(Integer thispage,Integer pagenumber) {
        int page=thispage*5;
        
        List<UserU> u=userUMapper.selectAllUserU(page,pagenumber);
        return u;
       
    }
    public void deleteUserUById(Integer uid) {
        UserUExample ue=new UserUExample();
        ue.createCriteria().andUidEqualTo(uid);
        UserU user=getUserUById(uid);
        user.setEnabled(0);
        user.setUpdatetime(new Date());
       userUMapper.updateByExample(user, ue);
    }

    public Integer countByExample() {
        // TODO Auto-generated method stub
        UserUExample ue=new UserUExample();
        ue.createCriteria().andStatusEqualTo("government").andEnabledEqualTo(1);
        return userUMapper.countByExample(ue);
    }
    public List<UserU> getAllUserUGovernment() {
        // TODO Auto-generated method stub
        UserUExample e = new UserUExample();
        e.createCriteria().andStatusEqualTo("government").andEnabledEqualTo(1);
        
        return userUMapper.selectByExample(e);
    }
    public List<UserDeptKey> getUidByDid(Integer did) {
        // TODO Auto-generated method stub
        UserDeptExample ud=new UserDeptExample();
        ud.createCriteria().andDidEqualTo(did);
        return userDeptMapper.selectByExample(ud);
    }

    public UserExtend getUserExtend(Integer uid) {
        // TODO Auto-generated method stub
        UserExtendExample ue=new UserExtendExample();
        ue.createCriteria().andUidEqualTo(uid);
        return userExtendMapper.selectByExample(ue).get(0);
    }

    public void updateByPrimaryKeySelective(UserU user) {
        // TODO Auto-generated method stub
        user.setUpdatetime(new Date());
        userUMapper.updateByPrimaryKeySelective(user);
    }

    public UserDeptKey getUserUserDeptKey(Integer uid) {
        // TODO Auto-generated method stub
        UserDeptExample ud=new UserDeptExample();
        ud.createCriteria().andUidEqualTo(uid);
        return userDeptMapper.selectByExample(ud).get(0);
    }

    public List<UserPartKey> getUserPartKey(Integer uid) {
        // TODO Auto-generated method stub
        UserPartExample upe=new UserPartExample();
        upe.createCriteria().andUidEqualTo(uid);
        return userPartMapper.selectByExample(upe);
    }

    public void updateUserUImg(UserExtend userU) {
        // TODO Auto-generated method stub
        UserU u=getUserUById(userU.getUid());
        u.setUpdatetime(new Date());
        userUMapper.updateByPrimaryKeySelective(u);
        UserExtendExample ue=new UserExtendExample();
        ue.createCriteria().andUidEqualTo(userU.getUid());
        userExtendMapper.updateByExampleSelective(userU, ue);
    }

    public void updateSelective(UserU userU) {
        // TODO Auto-generated method stub
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
        userU.setUpdatetime(new Date());
        userUMapper.updateByPrimaryKeySelective(userU);
        //存用户扩展信息
        UserExtendExample uu=new UserExtendExample();
        uu.createCriteria().andUidEqualTo(userU.getUid());
        UserExtend uuu=userExtendMapper.selectByExample(uu).get(0);
        userU.getUserExtend().setId(uuu.getId());
        userU.getUserExtend().setUid(userU.getUid());
        userExtendMapper.updateByPrimaryKeySelective(userU.getUserExtend());
        //存用户和部门信息
        userU.getUserDeptKey().setUid(userU.getUid());
        UserDeptExample ue=new UserDeptExample();
        ue.createCriteria().andUidEqualTo(userU.getUid());
        userDeptMapper.updateByExampleSelective(userU.getUserDeptKey(), ue);
    }

    public void updateDeptById(Integer uu, Integer did) {
        // TODO Auto-generated method stub
        UserU u=getUserUById(uu);
        u.setUpdatetime(new Date());
        userUMapper.updateByPrimaryKeySelective(u);
        UserDeptKey uk=new UserDeptKey();
        uk.setDid(did);
        uk.setUid(uu);
        UserDeptExample ue=new UserDeptExample();
        ue.createCriteria().andUidEqualTo(uu);
        userDeptMapper.updateByExampleSelective(uk, ue);
    }

   
   

   

   
}
