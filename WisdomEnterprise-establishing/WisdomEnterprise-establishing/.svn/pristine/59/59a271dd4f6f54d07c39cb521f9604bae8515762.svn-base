<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:p="http://www.springframework.org/schema/p"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"

    xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-2.5.xsd
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
                        ">

    <!-- 扫描cn.sirbox包里下的所有class文件，配置注解的类全都装入容器中进行管理 -->
    <context:component-scan base-package="cn.sirbox" />
    <!-- 添加注解驱动 -->
    <mvc:annotation-driven />
     <!-- 配置静态资源，直接映射到对应的文件夹，不被DispatcherServlet处理，3.04新增功能，需要重新设置spring-mvc-3.0.xsd-->
     <mvc:resources mapping="/images/**" location="/images/" />
     <mvc:resources mapping="/js/**" location="/js/" />
     <mvc:resources mapping="/css/**" location="/css/" />
     <mvc:resources mapping="/plugins/**" location="/plugins/" />
    <!-- 引入jdbc配置文件 -->
    <context:property-placeholder location="classpath:dataSource.properties" />

    <!--创建jdbc数据源 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${driver}" />
        <property name="url" value="${url}" />
        <property name="username" value="${username}" />
        <property name="password" value="${password}" />
    </bean>

    <!-- 配置事务管理  -->
    <bean id="transactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

     <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <!-- 自动扫描mapping.xml文件 -->  
        <property name="mapperLocations" value="classpath:cn/sirbox/dao/*.xml"></property>
    </bean>

    <!-- 配置Mapper扫描器 -->
   <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--&lt;!&ndash; 扫描包路径,如果需要扫描多个包中间用半角逗号隔开 &ndash;&gt;-->
        <property name="basePackage" value="cn.sirbox.dao"/>
        <!--&lt;!&ndash; 这边不能使用ref="sqlSessionFactory"原因是因为上面加载配置文件导致这边引用会报错 &ndash;&gt;-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>
    <!-- MapperFactoryBean 创建的代理类实现了IUserDAO接口,并且注入到应用程序中，这样不用写实现类 -->

    <bean id="loginUrlEntryPoint" class="cn.sirbox.security.LoginUrlEntryPoint"></bean>
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/> 
	
	



	

</beans>	