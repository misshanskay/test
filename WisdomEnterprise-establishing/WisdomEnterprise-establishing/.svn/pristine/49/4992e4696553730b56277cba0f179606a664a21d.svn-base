package cn.sirbox.controller;

import java.io.IOException;
import java.lang.ProcessBuilder.Redirect;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.github.pagehelper.PageInfo;

import cn.sirbox.model.Booked;
import cn.sirbox.model.BookedQueryVo;
import cn.sirbox.model.page;
import cn.sirbox.service.BookedService;
@RequestMapping("/booked")
@Controller
public class BookedController {
	
	@Autowired
	private BookedService bookedService;
	
	@RequestMapping("/findAll")
	public String findAll(Model model,@RequestParam(required=false, value="thispage",defaultValue="1")String thispage){
				
		List<Booked> blist = bookedService.findAll(thispage);
		PageInfo<Booked> pageInfo = new PageInfo<Booked>(blist);
		Long count = pageInfo.getTotal();
		model.addAttribute("blist",blist);
		page page =  new page(Integer.parseInt(thispage),Integer.valueOf(count.toString()));
		model.addAttribute("page",page);
		return "/booked/bookedlist";
	}
	
	@RequestMapping("/export")
	public String exportFile(HttpServletResponse response){
		
		bookedService.exportFile(response);
		return "Redirect:findall.do";
	}
	
	@RequestMapping("/reduce")
	public void reduce(Booked booked,HttpServletResponse response){
		
		boolean flag = bookedService.add(booked);
		if(flag){
			try {
				response.getWriter().write(1);
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
	}
	
	@RequestMapping("/toreduce")
	public String toReduce(){
		
		return "/booked/reduce";
	}
	
	@RequestMapping("/toquery")
	public String toQuery(){
		//model.addAttribute(new Booked());
		return "/booked/query";
	}
	
	@RequestMapping("/query")
	public String expense(Model model,BookedQueryVo bookedQueryVo,@RequestParam(defaultValue = "1", value="thispage",required=false) String thispage){
		
		List<Booked> blist = bookedService.expense(thispage,bookedQueryVo);
		PageInfo<Booked> pageInfo = new PageInfo<Booked>(blist);
		Long count = pageInfo.getTotal();
		page page = new page(Integer.parseInt(thispage),Integer.valueOf(count.toString()));
		model.addAttribute("page",page);
		model.addAttribute("blist",blist);
		return "/booked/expenselist";
	}
}
