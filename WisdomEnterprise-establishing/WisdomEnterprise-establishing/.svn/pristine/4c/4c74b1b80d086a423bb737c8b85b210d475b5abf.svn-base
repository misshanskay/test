<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.sirbox.dao.BookedMapper" >
  <resultMap id="BaseResultMap" type="cn.sirbox.model.Booked" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="TYPE" property="type" jdbcType="VARCHAR" />
    <result column="deal" property="deal" jdbcType="DECIMAL" />
    <result column="way" property="way" jdbcType="VARCHAR" />
    <result column="number" property="number" jdbcType="VARCHAR" />
    <result column="note" property="note" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="product_type" property="productType" jdbcType="VARCHAR" />
    <result column="balance" property="balance" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, username, TYPE, deal, way, number, note, create_time, state, product_type, balance
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.sirbox.model.BookedExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from booked
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
    <select id="selectByExamples" resultMap="BaseResultMap">
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from booked
  </select>
  
  <select id="selectByBooked" resultMap="BaseResultMap" parameterType="cn.sirbox.model.Booked">
    select
    <include refid="Base_Column_List" />
    from booked 
    <where>
 	  <if test="username != null" >
       username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="way != null" >
       and way = #{way,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
       and number = #{number,jdbcType=VARCHAR},
      </if>
    </where>
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from booked
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from booked
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.sirbox.model.BookedExample" >
    delete from booked
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.sirbox.model.Booked" >
    insert into booked (id, username, TYPE, 
      deal, way, number, 
      note, create_time, state, 
      product_type, balance)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{deal,jdbcType=DECIMAL}, #{way,jdbcType=VARCHAR}, #{number,jdbcType=VARCHAR}, 
      #{note,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, 
      #{productType,jdbcType=VARCHAR}, #{balance,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="cn.sirbox.model.Booked" >
    insert into booked
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="type != null" >
        TYPE,
      </if>
      <if test="deal != null" >
        deal,
      </if>
      <if test="way != null" >
        way,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="note != null" >
        note,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="productType != null" >
        product_type,
      </if>
      <if test="balance != null" >
        balance,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="deal != null" >
        #{deal,jdbcType=DECIMAL},
      </if>
      <if test="way != null" >
        #{way,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="productType != null" >
        #{productType,jdbcType=VARCHAR},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.sirbox.model.BookedExample" resultType="java.lang.Integer" >
    select count(*) from booked
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update booked
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        TYPE = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.deal != null" >
        deal = #{record.deal,jdbcType=DECIMAL},
      </if>
      <if test="record.way != null" >
        way = #{record.way,jdbcType=VARCHAR},
      </if>
      <if test="record.number != null" >
        number = #{record.number,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null" >
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.productType != null" >
        product_type = #{record.productType,jdbcType=VARCHAR},
      </if>
      <if test="record.balance != null" >
        balance = #{record.balance,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update booked
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      TYPE = #{record.type,jdbcType=VARCHAR},
      deal = #{record.deal,jdbcType=DECIMAL},
      way = #{record.way,jdbcType=VARCHAR},
      number = #{record.number,jdbcType=VARCHAR},
      note = #{record.note,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      product_type = #{record.productType,jdbcType=VARCHAR},
      balance = #{record.balance,jdbcType=DECIMAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.sirbox.model.Booked" >
    update booked
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        TYPE = #{type,jdbcType=VARCHAR},
      </if>
      <if test="deal != null" >
        deal = #{deal,jdbcType=DECIMAL},
      </if>
      <if test="way != null" >
        way = #{way,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="productType != null" >
        product_type = #{productType,jdbcType=VARCHAR},
      </if>
      <if test="balance != null" >
        balance = #{balance,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.sirbox.model.Booked" >
    update booked
    set username = #{username,jdbcType=VARCHAR},
      TYPE = #{type,jdbcType=VARCHAR},
      deal = #{deal,jdbcType=DECIMAL},
      way = #{way,jdbcType=VARCHAR},
      number = #{number,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      product_type = #{productType,jdbcType=VARCHAR},
      balance = #{balance,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>