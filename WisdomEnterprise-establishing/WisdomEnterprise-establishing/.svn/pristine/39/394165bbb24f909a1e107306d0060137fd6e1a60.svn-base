package cn.sirbox.service.impl;

import java.util.Date;
import java.util.HashMap;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.github.pagehelper.PageHelper;

import cn.sirbox.dao.LoggerMapper;
import cn.sirbox.model.Logger;
import cn.sirbox.model.LoggerExample;
import cn.sirbox.model.UserU;

@Service
public class LoggerService {

    @Autowired
    private LoggerMapper loggerMapper;
    
    
    private static HashMap<String, String> map = new HashMap<String, String>() {
        {
        
            put("LOG_LOGIN", "系统登陆");
            put("LOG_LOGOUT", "系统登出");
            put("LOG_ADDUSER", "用户添加");
            put("LOG_ADDENTERPRISE", "企业注册");
            put("LOG_ENTERPRISEREVIEWED", "企业审核");
            put("LOG_ENTERPRISEDOWN", "企业信息下载");
            put("LOG_ADDRELEASE", "招商信息发布");
            put("LOG_RELEASEREVIEWED", "招商信息审核");
            put("LOG_RELEASEDOWN", "招商信息下载");
            put("LOG_ADDDOARTICLE", "发起办文");
            put("LOG_DOARTICLE", "办文");
            put("LOG_SELECTDOARTICLE", "办文查询");
            put("LOG_MONITORANDREMINDER", "监控与催办");
            put("LOG_WORKCOMMISSION", "工作委托");
            put("LOG_UPDATEUSER", "修改个人信息");
            put("LOG_RECHARGE", "充值");
            put("LOG_CONSUMPTION", "消费");
            put("LOG_FINANCIALSTATEMENTSDOWN", "下载财务报表");
            put("LOG_ADDNOTICE", "公告发布");
            put("LOG_SELECTNOTICE", "公告查询");
            put("LOG_MATCHRELEASE", "手动匹配招商信息");
            put("LOG_SELECTLOGGER", "日志查询");
            put("LOG_UPDATEROADSHOW", "修改路演设备");
            put("LOG_ADDROADSHOW", "添加路演设备");
            put("LOG_UPDATESYSTEM", "修改系统参数");
            
           
        }
    };
    
    private static HashMap<String, Integer> map1 = new HashMap<String, Integer>() {
        {
            put("LEVEL_DEBUG", 1);//调试
            put("LEVEL_INFO", 2);//正常
            put("LEVEL_WARN", 3);//警告
            put("LEVEL_ERROR", 4);//错误
            put("LEVEL_FATAL", 5);//严重错误
           
        }
    };
    public void logger(HttpServletRequest request,String type,String level,Integer result,String remark){
        Logger log=new Logger();
        HttpSession session=request.getSession();
        UserU user=(UserU)session.getAttribute("userU");
        log.setUname(user.getUname());
        String ip=getIpAddr(request);
        
        log.setIp(ip);
        if(result==0){
            log.setResult(0);
        }else if(result==1){
            log.setResult(1);
        }
        System.out.println(ip);
        System.out.println(map.get(type));
        log.setTime(new Date());
        log.setType(map.get(type));
        log.setRemark(remark);
        log.setLevel(map1.get(level));
        
        loggerMapper.insertSelective(log);
    }
    public List<Logger> selectAllLogger(Integer thispage,Integer pagenumber) {
        // TODO Auto-generated method stub
        LoggerExample le=new LoggerExample();
        
        PageHelper.startPage(thispage*pagenumber,pagenumber);
        le.createCriteria().andTimeBetween(new Date(new Date().getTime()-24*60*60*1000), new Date());
        return loggerMapper.selectByExample(le);
    }

    public List<Logger> selectAllLogger2(Integer thispage,Integer pagenumber) {
        // TODO Auto-generated method stub
        LoggerExample le=new LoggerExample();
        
        PageHelper.startPage(thispage*pagenumber,pagenumber);
        le.createCriteria().andTimeBetween(new Date(new Date().getTime()-7*24*60*60*1000), new Date());
        return loggerMapper.selectByExample(le);
    }
    
    
    public List<Logger> selectAllLogger3(Integer thispage,Integer pagenumber) {
        // TODO Auto-generated method stub
        LoggerExample le=new LoggerExample();
        PageHelper.startPage(thispage*pagenumber,pagenumber);
        le.createCriteria().andTimeBetween(new Date(new Date().getTime()-(long)30*24*60*60*1000), new Date());
        return loggerMapper.selectByExample(le);
    }
    
    
    public String getIpAddr(HttpServletRequest request) { 
        String ip = request.getHeader("x-forwarded-for"); 
        if(ip == null || ip.length() == 0 || "unknown".equalsIgnoreCase(ip)) { 
            ip = request.getHeader("Proxy-Client-IP"); 
        } 
        if(ip == null || ip.length() == 0 || "unknown".equalsIgnoreCase(ip)) { 
            ip = request.getHeader("WL-Proxy-Client-IP"); 
        } 
        if(ip == null || ip.length() == 0 || "unknown".equalsIgnoreCase(ip)) { 
            ip = request.getRemoteAddr(); 
        } 
        return ip; 
    }
    public List<Logger> selectAllLogger1(Integer thispage, Integer pagenumber) {
        // TODO Auto-generated method stub
 LoggerExample le=new LoggerExample();
        
        PageHelper.startPage(thispage*pagenumber,pagenumber);
        return loggerMapper.selectByExample(le);
    }

}
