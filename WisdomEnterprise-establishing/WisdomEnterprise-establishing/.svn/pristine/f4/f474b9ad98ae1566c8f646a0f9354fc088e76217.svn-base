package cn.sirbox.service.impl;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import cn.sirbox.dao.PartMapper;
import cn.sirbox.dao.UserDeptMapper;
import cn.sirbox.dao.UserExtendMapper;
import cn.sirbox.dao.UserPartMapper;
import cn.sirbox.dao.UserUMapper;
import cn.sirbox.model.PartExample;
import cn.sirbox.model.UserDeptExample;
import cn.sirbox.model.UserDeptKey;
import cn.sirbox.model.UserExtend;
import cn.sirbox.model.UserExtendExample;
import cn.sirbox.model.UserPartKey;
import cn.sirbox.model.UserU;
import cn.sirbox.model.UserUExample;

/**
 * Created by X201 on 2016/8/26 0026.
 */
@Service
public class UserUService {

    @Autowired
    private UserUMapper userUMapper;
    
    @Autowired
    private UserDeptMapper userDeptMapper;

    @Autowired
    private UserExtendMapper userExtendMapper;
    
    @Autowired
    private UserPartMapper userPartMapper;
    
    @Autowired
    private PartMapper partMapper;
    
   public UserU getUserUById(Integer uid){

       UserUExample e = new UserUExample();
       e.createCriteria().andUidEqualTo(uid);
        return userUMapper.selectByExample(e).get(0);
    }

    public UserU getUserUByName(String uname) {
        UserUExample e = new UserUExample();
        e.createCriteria().andUnameEqualTo(uname);
        return userUMapper.selectByExample(e).get(0);
    }
    public UserU insertSelective(UserU userU){
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
        userU.setEnabled(1);
        userU.setStatus("government");
        userU.setCreatetime(new Date());
        userU.setUpdatetime(new Date());
        userUMapper.insertSelective(userU);
        UserU userU1=getUserUByName(userU.getUname());
        userU.setUid(userU1.getUid());
        userU.getUserExtend().setUid(userU1.getUid());
        userExtendMapper.insertSelective(userU.getUserExtend());
        userU.getUserDeptKey().setUid(userU1.getUid());
        userDeptMapper.insertSelective(userU.getUserDeptKey());
       
        return userU1;
       
    }
    /* public UserU getUserU(UserU userU) {
      //  return userUMapper.getUserU(userU);
        return null;
    }

    

    public void updateByPrimaryKeySelective(UserU userU) {
       // userUMapper.updateByPrimaryKeySelective(userU);
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd hh:mm:ss");
       // userU.setUpdatetime(sdf.format(new Date()));
       // userUMapper.updateUserU(userU);
       // userUMapper.updateUserUExtend(userU);
      
    }

    public void addUserUPower(String uname,String power) {
       // userUMapper.addUserUPower(uname,power);
    }

	public List<String> getUserUPower(String uname) {
		// TODO Auto-generated method stub
		//return userUMapper.getUserUPower(uname);
	    return null;
	}

	public void deleteUserUPower(String uname) {
		// TODO Auto-generated method stub
		//userUMapper.deleteUserUPower(uname);
	}

	public List<UserU> getAllUserUDept() {
		// TODO Auto-generated method stub
		//return userUMapper.getAllUserUDept();
	    return null;
	}

	public void updateDeptById(int uid, Integer did) {
		// TODO Auto-generated method stub
		//userUMapper.updateDeptById(uid,did);
	}

    public Integer countByUserU() {
        // TODO Auto-generated method stub
        //return userUMapper.countByUserU();
        return null;
    }

    public String getUserUPart(Integer uid) {
        // TODO Auto-generated method stub
        //return userUMapper.getUserUPart(uid);
        return null;
    }

   
    public void updateUserUImg(UserU userU) {
        // TODO Auto-generated method stub
        //userUMapper.updateUserUImg(userU);
    }
    
    public void test(){
        UserUExample e = new UserUExample();
        e.createCriteria().andUidEqualTo(1);
        userUMapper.selectByExample(e);
        
        
    }*/
    public List<UserU> selectAllUserU(Integer thispage) {
        int page=thispage*5;
        List<UserU> u=userUMapper.selectAllUserU(page);
        return u;
       
    }
    public void deleteUserUById(Integer uid) {
       // userUMapper.deleteUserUById(uid);
    }

    public Integer countByExample() {
        // TODO Auto-generated method stub
        return userUMapper.countByExample(new UserUExample());
    }
    public List<UserU> getAllUserUGovernment() {
        // TODO Auto-generated method stub
        UserUExample e = new UserUExample();
        e.createCriteria().andStatusEqualTo("government").andEnabledEqualTo(1);
        
        return userUMapper.selectByExample(e);
    }
    public List<UserDeptKey> getUidByDid(Integer did) {
        // TODO Auto-generated method stub
        UserDeptExample ud=new UserDeptExample();
        ud.createCriteria().andDidEqualTo(did);
        return userDeptMapper.selectByExample(ud);
    }

    public UserExtend getUserExtend(Integer uid) {
        // TODO Auto-generated method stub
        UserExtendExample ue=new UserExtendExample();
        ue.createCriteria().andUidEqualTo(uid);
        return userExtendMapper.selectByExample(ue).get(0);
    }

   

   
}
