<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.sirbox.dao.BookedMapper" >
  <resultMap id="BaseResultMap" type="cn.sirbox.model.Booked" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="TYPE" property="type" jdbcType="INTEGER" />
    <result column="deal" property="deal" jdbcType="REAL" />
    <result column="way" property="way" jdbcType="VARCHAR" />
    <result column="number" property="number" jdbcType="VARCHAR" />
    <result column="note" property="note" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="state" property="state" jdbcType="INTEGER" />
    <result column="product_type" property="productType" jdbcType="VARCHAR" />
    <result column="balance" property="balance" jdbcType="REAL" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <association property="account" javaType="cn.sirbox.model.Account">
    	<id column="user_id" property="id"/>
    	<result column="enterprise_name" property="enterpriseName"/>
    	<result column="balance" property="balance"/>
    </association>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, TYPE, deal, way, number, note, create_time, state, product_type, balance, user_name
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.sirbox.model.BookedExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from booked
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  
    <select id="selectByExamples" resultMap="BaseResultMap" parameterType="map" >
    select
     <include refid="Base_Column_List" />
    from booked b where type = 1 and state = 1
    <if test="ids != null and ids !=''" >
       and id in
      <foreach collection="ids" item="id" index="index" 
      separator="," open="(" close=")">
      	#{id,jdbcType=INTEGER}
      </foreach>
    </if>
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from booked
    where id = #{id,jdbcType=INTEGER}
  </select>
  
    <select id="selectByPrimaryKeys" resultMap="BaseResultMap" parameterType="cn.sirbox.model.Booked" >
    select 
    <include refid="Base_Column_List" />
    from booked
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from booked
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.sirbox.model.BookedExample" >
    delete from booked
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.sirbox.model.Booked" >
    insert into booked (id, user_id, TYPE, 
      deal, way, number, note, 
      create_time, state, product_type, 
      balance, user_name)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{deal,jdbcType=REAL}, #{way,jdbcType=VARCHAR}, #{number,jdbcType=VARCHAR}, #{note,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{state,jdbcType=INTEGER}, #{productType,jdbcType=VARCHAR}, 
      #{balance,jdbcType=REAL}, #{userName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.sirbox.model.Booked" >
    insert into booked
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="type != null" >
        TYPE,
      </if>
      <if test="deal != null" >
        deal,
      </if>
      <if test="way != null" >
        way,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="note != null" >
        note,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="productType != null" >
        product_type,
      </if>
      <if test="balance != null" >
        balance,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="deal != null" >
        #{deal,jdbcType=REAL},
      </if>
      <if test="way != null" >
        #{way,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        #{state,jdbcType=INTEGER},
      </if>
      <if test="productType != null" >
        #{productType,jdbcType=VARCHAR},
      </if>
      <if test="balance != null" >
        #{balance,jdbcType=REAL},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.sirbox.model.BookedExample" resultType="java.lang.Integer" >
    select count(*) from booked
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update booked
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        TYPE = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.deal != null" >
        deal = #{record.deal,jdbcType=REAL},
      </if>
      <if test="record.way != null" >
        way = #{record.way,jdbcType=VARCHAR},
      </if>
      <if test="record.number != null" >
        number = #{record.number,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null" >
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.productType != null" >
        product_type = #{record.productType,jdbcType=VARCHAR},
      </if>
      <if test="record.balance != null" >
        balance = #{record.balance,jdbcType=REAL},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update booked
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      TYPE = #{record.type,jdbcType=INTEGER},
      deal = #{record.deal,jdbcType=REAL},
      way = #{record.way,jdbcType=VARCHAR},
      number = #{record.number,jdbcType=VARCHAR},
      note = #{record.note,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=INTEGER},
      product_type = #{record.productType,jdbcType=VARCHAR},
      balance = #{record.balance,jdbcType=REAL}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.sirbox.model.Booked" >
    update booked
    <set >
      <if test="type != null and type != ''" >
        TYPE = #{type,jdbcType=INTEGER},
      </if>
      <if test="deal != null and deal != ''" >
        deal = #{deal,jdbcType=REAL},
      </if>
      <if test="way != null and way != ''" >
        way = #{way,jdbcType=VARCHAR},
      </if>
      <if test="number != null and number != ''" >
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="note != null and note != ''" >
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null and createTime != ''" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null and state != ''">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="productType != null and productType != ''" >
        product_type = #{productType,jdbcType=VARCHAR},
      </if>
      <if test="balance != null and balance != ''" >
        balance = #{balance,jdbcType=REAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.sirbox.model.Booked" >
    update booked
    set user_id = #{userId,jdbcType=INTEGER},
      TYPE = #{type,jdbcType=INTEGER},
      deal = #{deal,jdbcType=REAL},
      way = #{way,jdbcType=VARCHAR},
      number = #{number,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=INTEGER},
      product_type = #{productType,jdbcType=VARCHAR},
      balance = #{balance,jdbcType=REAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="find" parameterType="cn.sirbox.model.BookedQueryVo" resultMap="BaseResultMap">
		SELECT deal, way, user_id, balance, create_time FROM (
			SELECT SUM(deal) AS deal,way ,user_id, '' AS balance, create_time FROM booked   GROUP BY TYPE UNION ALL
			SELECT '' AS deal,'' AS way, '' AS user_id, SUM(balance) AS balance, create_time FROM booked
		)a 
	<where>
		<if test="username ! = null">
			user_id = (SELECT uid  FROM user_u WHERE uname =#{username,jdbcType=VARCHAR})
		</if>
		<if test="createtimeone ! = null and createtimetwo != null">
		    and create_time BETWEEN #{createtimeone,jdbcType=TIMESTAMP} AND #{createtimetwo,jdbcType=TIMESTAMP}
		</if>
		<if test="way ! = null">
		    and  way = #{way,jdbcType=VARCHAR}
		</if>
	</where>
  </select>
  
  <select id="selectByNumber" resultType="java.lang.Integer" parameterType="java.lang.String">
  		 select count(*) from booked where number = #{number,jdbcType=VARCHAR}
  </select>
  
  
  <update id="updateByPrimaryKeySelectives" parameterType="cn.sirbox.model.Booked" >
    update booked
    <set >
      <if test="type != null" >
        TYPE = #{type,jdbcType=INTEGER},
      </if>
      <if test="deal != null" >
        deal = #{deal,jdbcType=REAL},
      </if>
      <if test="way != null" >
        way = #{way,jdbcType=VARCHAR},
      </if>
      <if test="number != null" >
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="balance != null" >
        balance = #{balance,jdbcType=REAL},
      </if>
    </set>
    where number = #{number,jdbcType=VARCHAR}
  </update>
  
  <select id="getPayManage" resultMap="BaseResultMap" parameterType="cn.sirbox.model.BookedExample">
  		SELECT  
  		b.id, a.enterprise_name, b.number, b.deal, b.way, b.state, b.create_time, b.type
  		 FROM booked b, account a WHERE b.user_id = a.id
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="getCountDeposit" resultType="Integer" parameterType="java.util.Date">
        SELECT  sum(deal)
         FROM booked WHERE create_time between #{time} and #{time2} and type=1 and state=1
  </select> 
   <select id="getCountExpend" resultType="Integer" parameterType="java.util.Date">
        SELECT  sum(deal)
         FROM booked WHERE create_time between #{time} and #{time2} and type=2 and state=1
  </select>
</mapper>